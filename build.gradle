plugins {
	id 'maven-publish'
	alias(libs.plugins.quilt.loom)
}

archivesBaseName = project.archives_base_name
version = project.version
group = project.maven_group

repositories {
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }

	maven { url = "https://mvn.devos.one/snapshots/" }
	maven {
		url = "https://jitpack.io"
		content {
			includeGroup("com.github.Chocohead")
			includeGroup("com.github.LlamaLad7")
		}
	}

	maven {
		url "https://cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}
}

dependencies {
    minecraft libs.minecraft
	mappings loom.layered {
		addLayer quiltMappings.mappings("org.quiltmc:quilt-mappings:${libs.versions.quilt.mappings.get()}:v2")
		// officialMojangMappings() // Uncomment if you want to use Mojang mappings as your primary mappings, falling back on QM for parameters and Javadocs
	}
	modImplementation libs.quilt.loader

	// QSL is not a complete API; You will need Quilted Fabric API to fill in the gaps.
	// Quilted Fabric API will automatically pull in the correct QSL version.
	modImplementation libs.quilted.fabric.api

    modImplementation "maven.modrinth:ad-astra:${project.ad_astra_version}-${project.minecraft_version}"
    modImplementation "maven.modrinth:create-fabric:${project.minecraft_version}-${project.create_version}"
    modImplementation "maven.modrinth:kubejs:${project.kubejs_version}+fabric"
    modImplementation "maven.modrinth:architectury-api:${project.architectury_version}+fabric"
    modImplementation "maven.modrinth:bits-and-chisels:${project.bits_and_chisels_version}"
	modImplementation "maven.modrinth:farmers-delight-fabric:${project.farmers_delight_version}"
	modImplementation "maven.modrinth:roughly-enough-items:${project.rei_version}+fabric"
	modImplementation "maven.modrinth:led:${project.led_version}"
	modImplementation "maven.modrinth:interference:${project.interference_version}"

	modImplementation "curse.maven:industrial-revolution-391708:${project.indrev_version}"

	modImplementation include("maven.modrinth:deferred-registries:${project.deferred_registries_version}")
	modImplementation include("maven.modrinth:brrp:${project.brrp_version}")

	modImplementation "io.github.fabricators_of_create:Porting-Lib:1.2.575-beta+1.18.2-stable"
}

processResources {
	inputs.property "version", version

	filesMatching('quilt.mod.json') {
		expand "version": version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Still required by IDEs such as Eclipse and Visual Studio Code
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	// If this mod is going to be a library, then it should also generate Javadocs in order to aid with developement.
	// Uncomment this line to generate them.
	// withJavadocJar()
}

// If you plan to use a different file for the license, don't forget to change the file name here!
jar {
	from("LICENSE") {
		rename { "${it}_${archivesBaseName}" }
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

loom {
	accessWidenerPath = file("src/main/resources/cabricality.accesswidener")
}